{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "kdamg7370adfspring2025"
		},
		"Snowflake1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Snowflake1'"
		},
		"Snowflake_NYPD_Connection_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Snowflake_NYPD_Connection'"
		},
		"AzureDataLakeStorage_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://kdamg7370spring2025.dfs.core.windows.net/"
		},
		"AzureKeyVault_LS_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kdamg7370kvspring2025.vault.azure.net/"
		},
		"Snowflake1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "TEMP_DB"
		},
		"Snowflake1_properties_typeProperties_role": {
			"type": "string",
			"defaultValue": "TEMP_ROLE"
		},
		"Snowflake_NYPD_Connection_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "IP_NYPD_DB"
		},
		"Snowflake_NYPD_Connection_properties_typeProperties_role": {
			"type": "string",
			"defaultValue": "IP_NYPD_ROLE"
		},
		"ls_stgblobstorage2025_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'ls_stgblobstorage2025'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_TSV_2_Parquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Parquet_2_Snowflake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TSV_2_Parquet",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "Job_ID",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									{
										"name": "Load_Date",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "ls_stgblobstorage2025",
									"type": "LinkedServiceReference"
								},
								"path": "adfstagedcommandtempdata"
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@variables('myFileName')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SnowflakeTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema_Name": "TMEMP_SCHEMA",
									"Table_Name": "PET_LICENSE_STAGE"
								}
							}
						]
					},
					{
						"name": "TSV_2_Parquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Seattle_Pet_LIC_Updated",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@variables('myFileName')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"myFileName": {
						"type": "String",
						"defaultValue": "pet_lic_data.parquet"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet1')]",
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable1')]",
				"[concat(variables('factoryId'), '/datasets/Seattle_Pet_LIC_Updated')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_stgblobstorage2025')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_IndividualProj')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Parquet_2_Snow",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "Job_ID",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									{
										"name": "Load_Date",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "ls_stgblobstorage2025",
									"type": "LinkedServiceReference"
								},
								"path": ""
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ARREST_KEY",
											"type": "String"
										},
										"sink": {
											"name": "ARREST_KEY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PD_CD",
											"type": "Int32"
										},
										"sink": {
											"name": "PD_CD",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "PD_DESC",
											"type": "String"
										},
										"sink": {
											"name": "PD_DESC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "KY_CD",
											"type": "Int32"
										},
										"sink": {
											"name": "KY_CD",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OFNS_DESC",
											"type": "String"
										},
										"sink": {
											"name": "OFNS_DESC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LAW_CODE",
											"type": "String"
										},
										"sink": {
											"name": "LAW_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LAW_CAT_CD",
											"type": "String"
										},
										"sink": {
											"name": "LAW_CAT_CD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ARREST_BORO",
											"type": "String"
										},
										"sink": {
											"name": "ARREST_BORO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ARREST_PRECINCT",
											"type": "Int32"
										},
										"sink": {
											"name": "ARREST_PRECINCT",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "JURISDICTION_CODE",
											"type": "Int32"
										},
										"sink": {
											"name": "JURISDICTION_CODE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "AGE_GROUP",
											"type": "String"
										},
										"sink": {
											"name": "AGE_GROUP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PERP_SEX",
											"type": "String"
										},
										"sink": {
											"name": "PERP_SEX",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PERP_RACE",
											"type": "String"
										},
										"sink": {
											"name": "PERP_RACE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "X_COORD_CD",
											"type": "Int64"
										},
										"sink": {
											"name": "X_COORD_CD",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Y_COORD_CD",
											"type": "Int64"
										},
										"sink": {
											"name": "Y_COORD_CD",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "LATITUDE",
											"type": "Single"
										},
										"sink": {
											"name": "LATITUDE",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "LONGITUDE",
											"type": "Single"
										},
										"sink": {
											"name": "LONGITUDE",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "NEW_GEOREFERENCED_COLUMN",
											"type": "String"
										},
										"sink": {
											"name": "NEW_GEOREFERENCED_COLUMN",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ARREST_DATE_FORMATTED",
											"type": "DateTime"
										},
										"sink": {
											"name": "ARREST_DATE_FORMATTED",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Job_ID",
											"type": "String"
										},
										"sink": {
											"name": "DI_JOB_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Load_Date",
											"type": "String"
										},
										"sink": {
											"name": "DI_LOAD_DT",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet_NYPD",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SnowflakeTable_NYPD",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet_NYPD')]",
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable_NYPD')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_stgblobstorage2025')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"fileSystem": "silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SEATTLE_PET_LIC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Seattle_Pet_Licenses_20250206.tsv",
						"fileSystem": "bronze"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Seattle_Pet_LIC_Updated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Seattle_Pet_Licenses_Updated.tsv",
						"fileSystem": "bronze"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema_Name": {
						"type": "string"
					},
					"Table_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "LICENSE_ISSUE_DATE",
						"type": "VARCHAR"
					},
					{
						"name": "LICENSE_NUMBER",
						"type": "VARCHAR"
					},
					{
						"name": "ANIMAL_NAME",
						"type": "VARCHAR"
					},
					{
						"name": "SPECIES",
						"type": "VARCHAR"
					},
					{
						"name": "PRIMARY_BREED",
						"type": "VARCHAR"
					},
					{
						"name": "SECONDARY_BREED",
						"type": "VARCHAR"
					},
					{
						"name": "ZIP_CODE",
						"type": "VARCHAR"
					},
					{
						"name": "DI_JOB_ID",
						"type": "VARCHAR"
					},
					{
						"name": "DI_LOAD_DT",
						"type": "DATE"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema_Name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table_Name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeTable_NYPD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_NYPD_Connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [],
				"typeProperties": {
					"schema": "IP_NYPD_SCHEMA",
					"table": "FACT_ARRESTS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_NYPD_Connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "adf to access my storage containers",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_LS_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "access my key vault from azure data factory",
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_LS_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "hma20544.east-us-2.azure",
					"user": "TEMP_USER",
					"database": "[parameters('Snowflake1_properties_typeProperties_database')]",
					"warehouse": "TEMP_WH",
					"role": "[parameters('Snowflake1_properties_typeProperties_role')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Snowflake1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake_NYPD_Connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "hma20544.east-us-2.azure",
					"user": "IP_NYPD_USER",
					"database": "[parameters('Snowflake_NYPD_Connection_properties_typeProperties_database')]",
					"warehouse": "IP_NYPD_WH",
					"role": "[parameters('Snowflake_NYPD_Connection_properties_typeProperties_role')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Snowflake_NYPD_Connection_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_stgblobstorage2025')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "linking the stgblobstorage2025 to the DF",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('ls_stgblobstorage2025_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet_NYPD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "NYPD_ParquetFile.parquet",
						"fileSystem": "silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataFlow_Parquet_NYPD",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SnowflakeTable_NYPD",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ARREST_KEY as string,",
						"          PD_CD as integer,",
						"          PD_DESC as string,",
						"          KY_CD as integer,",
						"          OFNS_DESC as string,",
						"          LAW_CODE as string,",
						"          LAW_CAT_CD as string,",
						"          ARREST_BORO as string,",
						"          ARREST_PRECINCT as integer,",
						"          JURISDICTION_CODE as integer,",
						"          AGE_GROUP as string,",
						"          PERP_SEX as string,",
						"          PERP_RACE as string,",
						"          X_COORD_CD as double,",
						"          Y_COORD_CD as double,",
						"          Latitude as string,",
						"          Longitude as string,",
						"          {New Georeferenced Column} as string,",
						"          ARREST_DATE_Formatted as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source1",
						"source1 derive(ARREST_DATE_Formatted = toString(ARREST_DATE_Formatted, \"yyyy-MM-dd HH:mm:ss\")  ) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataFlow_Parquet_NYPD')]",
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable_NYPD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_Parquet_NYPD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "NYPD_ParquetFile.parquet",
						"fileSystem": "silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_LS')]"
			]
		}
	]
}